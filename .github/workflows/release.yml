name: Build & Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 24

      - name: Install dependencies
        run: npm install --global web-ext crx3

      - name: Build Firefox XPI
        run: |
          mkdir -p dist/firefox
          web-ext build --overwrite-dest --artifacts-dir=dist/firefox
          for f in dist/firefox/*.zip; do
            mv "$f" "${f%.zip}.xpi"
          done

      - name: Build Chrome CRX and ZIP
        run: |
          mkdir -p dist/chrome
          rsync -a --exclude 'dist' ./ dist/chrome/
          # Remove Firefox-specific fields from manifest
          jq 'del(.background.scripts, .browser_specific_settings)' dist/chrome/manifest.json > dist/chrome/manifest.tmp.json
          mv dist/chrome/manifest.tmp.json dist/chrome/manifest.json
          web-ext build --source-dir=dist/chrome --overwrite-dest --artifacts-dir=dist/chrome
          # Write secret key to file
          echo "${{ secrets.CRX_KEY }}" > dist/chrome/key.pem
          VERSION=$(jq -r '.version' dist/chrome/manifest.json)
          crx3 pack dist/chrome --output dist/chrome/wikitidedebug-$VERSION.crx --key dist/chrome/key.pem
          mv web-extension.crx dist/chrome/wikitidedebug-$VERSION.crx

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(jq -r '.version' manifest.json)
          REPO=$(basename $GITHUB_REPOSITORY)
          TAG="v$VERSION"

          # Check if the tag already exists
          if gh release view "$TAG" >/dev/null 2>&1; then
            echo "Release $TAG already exists, skipping release."
          else
            gh release create "$TAG" \
              dist/firefox/*.xpi \
              dist/chrome/*.crx \
              dist/chrome/*.zip \
              --title "$REPO $VERSION" \
              --notes "Automated release of $REPO version $VERSION for Firefox and Chrome."
          fi
