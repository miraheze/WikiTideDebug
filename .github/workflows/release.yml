name: Build & Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      EXT_NAME: WikiTideDebug
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 24

      - name: Install dependencies
        run: npm install --global web-ext crx3

      - name: Build Firefox XPI (unsigned)
        run: |
          mkdir -p dist/firefox
          rsync -a --exclude 'dist' ./ dist/firefox/
          # Remove background.service_worker (not supported in Firefox)
          jq 'del(.background.service_worker)' dist/firefox/manifest.json > dist/firefox/manifest.tmp.json
          mv dist/firefox/manifest.tmp.json dist/firefox/manifest.json
          web-ext build --source-dir=dist/firefox --overwrite-dest --artifacts-dir=dist/firefox
          VERSION=$(jq -r '.version' dist/firefox/manifest.json)
          mv dist/firefox/*.zip dist/firefox/$EXT_NAME-$VERSION.xpi

      - name: Build & Sign Firefox XPI
        env:
          WEB_EXT_API_KEY: ${{ secrets.AMO_JWT_ISSUER }}
          WEB_EXT_API_SECRET: ${{ secrets.AMO_JWT_SECRET }}
        run: |
          mkdir -p dist/firefox-signed
          # Prepare signed source with service_worker removed
          mkdir -p dist/firefox-sign-source
          rsync -a --exclude 'dist' ./ dist/firefox-sign-source/
          jq 'del(.background.service_worker)' dist/firefox-sign-source/manifest.json > dist/firefox-sign-source/manifest.tmp.json
          mv dist/firefox-sign-source/manifest.tmp.json dist/firefox-sign-source/manifest.json

          set +e
          web-ext sign \
            --source-dir=dist/firefox-sign-source \
            --artifacts-dir=dist/firefox-signed \
            --channel=unlisted
          STATUS=$?
          set -e

          if [ $STATUS -ne 0 ]; then
            echo "Signing failed, probably version already exists. Skipping signed XPI."
            rm -f dist/firefox-signed/*.xpi
          else
            # Rename signed XPI to include the actual extension name and "-signed"
            VERSION=$(jq -r '.version' manifest.json)
            mv dist/firefox-signed/*.xpi dist/firefox-signed/$EXT_NAME-$VERSION-signed.xpi
          fi

      - name: Build Chrome CRX and ZIP
        run: |
          mkdir -p dist/chrome
          rsync -a --exclude 'dist' ./ dist/chrome/
          # Remove Firefox-specific fields from manifest
          jq 'del(.background.scripts, .browser_specific_settings)' dist/chrome/manifest.json > dist/chrome/manifest.tmp.json
          mv dist/chrome/manifest.tmp.json dist/chrome/manifest.json
          VERSION=$(jq -r '.version' dist/chrome/manifest.json)

          web-ext build --source-dir=dist/chrome --overwrite-dest --artifacts-dir=dist/chrome
          mv dist/chrome/*.zip dist/chrome/$EXT_NAME-$VERSION.zip

          # Write secret key to file
          echo "${{ secrets.CRX_KEY }}" > dist/chrome/key.pem

          crx3 pack dist/chrome \
            --output dist/chrome/$EXT_NAME-$VERSION.crx \
            --key dist/chrome/key.pem

          mv web-extension.crx dist/chrome/$EXT_NAME-$VERSION.crx

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(jq -r '.version' manifest.json)
          TAG="v$VERSION"

          if gh release view "$TAG" >/dev/null 2>&1; then
            echo "Release $TAG already exists, skipping release."
          else
            FILES="dist/firefox/*.xpi"

            # Add signed XPI if it exists
            shopt -s nullglob
            SIGNED=(dist/firefox-signed/*.xpi)
            if [ ${#SIGNED[@]} -ne 0 ]; then
              FILES="$FILES ${SIGNED[@]}"
            fi
            shopt -u nullglob

            FILES="$FILES dist/chrome/*.crx dist/chrome/*.zip"

            gh release create "$TAG" \
              $FILES \
              --title "$EXT_NAME $VERSION" \
              --notes "Automated release of $EXT_NAME version $VERSION for Firefox (unsigned + signed if available) and Chrome."
          fi
